// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	k8s "github.com/dell/repctl/pkg/k8s"
	mock "github.com/stretchr/testify/mock"
)

// GetClustersInterface is an autogenerated mock type for the GetClustersInterface type
type GetClustersInterface struct {
	mock.Mock
}

// GetAllClusters provides a mock function with given fields: clusterIDs, configDir
func (_m *GetClustersInterface) GetAllClusters(clusterIDs []string, configDir string) (*k8s.Clusters, error) {
	ret := _m.Called(clusterIDs, configDir)

	if len(ret) == 0 {
		panic("no return value specified for GetAllClusters")
	}

	var r0 *k8s.Clusters
	var r1 error
	if rf, ok := ret.Get(0).(func([]string, string) (*k8s.Clusters, error)); ok {
		return rf(clusterIDs, configDir)
	}
	if rf, ok := ret.Get(0).(func([]string, string) *k8s.Clusters); ok {
		r0 = rf(clusterIDs, configDir)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*k8s.Clusters)
		}
	}

	if rf, ok := ret.Get(1).(func([]string, string) error); ok {
		r1 = rf(clusterIDs, configDir)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGetClustersInterface creates a new instance of GetClustersInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGetClustersInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *GetClustersInterface {
	mock := &GetClustersInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
